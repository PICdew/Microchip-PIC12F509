

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Sep 24 00:15:30 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC12F509 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     status equ 03h
    44  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f509.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f509.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f509.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f509.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 186 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f509.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 206 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f509.h"
    98                           OSCCAL equ 05h ;# 
    99  0005                     # 272 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f509.h"
   100                           GPIO equ 06h ;# 
   101  0006                     	FNCALL	_main,_retardon
   102                           	FNCALL	_main,_retardon2
   103                           	FNROOT	_main
   104                           	global	_GPIObits
   105                           _GPIObits	set	0x6
   106  0006                     	global	_TRISGPIO
   107                           _TRISGPIO	set	0x6
   108  0006                     ; #config settings
   109                           global __CFG_OSC$IntRC
   110                           __CFG_OSC$IntRC equ 0x0
   111  0000                     global __CFG_WDT$OFF
   112                           __CFG_WDT$OFF equ 0x0
   113  0000                     global __CFG_CP$OFF
   114                           __CFG_CP$OFF equ 0x0
   115  0000                     global __CFG_MCLRE$OFF
   116                           __CFG_MCLRE$OFF equ 0x0
   117  0000                     	file	"C:\Users\klnla\AppData\Local\Temp\si7s."
   118                           	line	#
   119                           psect cinit,class=ENTRY,delta=2
   120                           global start_initialization
   121                           start_initialization:
   122  002                     
   123                           global __initialization
   124                           __initialization:
   125  002                     psect cinit,class=ENTRY,delta=2,merge=1
   126                           global end_of_initialization,__end_of__initialization
   127                           
   128                           ;End of C runtime variable initialization code
   129                           
   130                           end_of_initialization:
   131  002                     __end_of__initialization:
   132  002                     clrf fsr
   133  002  064                ljmp _main	;jump to C main() function
   134  003  4A3  AF1           psect	cstackBANK0,class=BANK0,space=1,noexec
   135                           global __pcstackBANK0
   136                           __pcstackBANK0:
   137  010                     	global	retardon@i
   138                           retardon@i:	; 2 bytes @ 0x0
   139  010                     	global	retardon2@k
   140                           retardon2@k:	; 2 bytes @ 0x0
   141  010                     	ds	2
   142  010                     	global	retardon@j
   143                           retardon@j:	; 2 bytes @ 0x2
   144  012                     	global	retardon2@l
   145                           retardon2@l:	; 2 bytes @ 0x2
   146  012                     	ds	2
   147  012                     	global	retardon2@m
   148                           retardon2@m:	; 2 bytes @ 0x4
   149  014                     	ds	2
   150  014                     psect	cstackCOMMON,class=COMMON,space=1,noexec
   151                           global __pcstackCOMMON
   152                           __pcstackCOMMON:
   153  000                     ??_retardon2:	; 1 bytes @ 0x0
   154  000                     ??_retardon:	; 1 bytes @ 0x0
   155  000                     ?_main:	; 1 bytes @ 0x0
   156  000                     ??_main:	; 1 bytes @ 0x0
   157  000                     ?_retardon2:	; 2 bytes @ 0x0
   158  000                     ?_retardon:	; 2 bytes @ 0x0
   159  000                     ;!
   160                           ;!Data Sizes:
   161                           ;!    Strings     0
   162                           ;!    Constant    0
   163                           ;!    Data        0
   164                           ;!    BSS         0
   165                           ;!    Persistent  0
   166                           ;!    Stack       0
   167                           ;!
   168                           ;!Auto Spaces:
   169                           ;!    Space          Size  Autos    Used
   170                           ;!    COMMON            1      0       0
   171                           ;!    BANK0            16      6       6
   172                           ;!    BANK1            16      0       0
   173                           
   174                           ;!
   175                           ;!Pointer List with Targets:
   176                           ;!
   177                           ;!    None.
   178                           
   179                           
   180                           ;!
   181                           ;!Critical Paths under _main in COMMON
   182                           ;!
   183                           ;!    None.
   184                           ;!
   185                           ;!Critical Paths under _main in BANK0
   186                           ;!
   187                           ;!    _main->_retardon2
   188                           ;!
   189                           ;!Critical Paths under _main in BANK1
   190                           ;!
   191                           ;!    None.
   192                           
   193 ;;
   194 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   195 ;;
   196                           
   197                           ;!
   198                           ;!Call Graph Tables:
   199                           ;!
   200                           ;! ---------------------------------------------------------------------------------
   201                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   202                           ;! ---------------------------------------------------------------------------------
   203                           ;! (0) _main                                                 0     0      0     150
   204                           ;!                           _retardon
   205                           ;!                          _retardon2
   206                           ;! ---------------------------------------------------------------------------------
   207                           ;! (1) _retardon2                                            6     6      0      90
   208                           ;!                                              0 BANK0      6     6      0
   209                           ;! ---------------------------------------------------------------------------------
   210                           ;! (1) _retardon                                             4     4      0      60
   211                           ;!                                              0 BANK0      4     4      0
   212                           ;! ---------------------------------------------------------------------------------
   213                           ;! Estimated maximum stack depth 1
   214                           ;! ---------------------------------------------------------------------------------
   215                           ;!
   216                           ;! Call Graph Graphs:
   217                           ;!
   218                           ;! _main (ROOT)
   219                           ;!   _retardon
   220                           ;!   _retardon2
   221                           ;!
   222                           
   223                           ;! Address spaces:
   224                           
   225                           ;!Name               Size   Autos  Total    Cost      Usage
   226                           ;!BITCOMMON            1      0       0       0        0.0%
   227                           ;!NULL                 0      0       0       0        0.0%
   228                           ;!CODE                 0      0       0       0        0.0%
   229                           ;!COMMON               1      0       0       1        0.0%
   230                           ;!BITSFR0              0      0       0       1        0.0%
   231                           ;!SFR0                 0      0       0       1        0.0%
   232                           ;!BITSFR1              0      0       0       2        0.0%
   233                           ;!SFR1                 0      0       0       2        0.0%
   234                           ;!STACK                0      0       0       2        0.0%
   235                           ;!BITBANK0            10      0       0       3        0.0%
   236                           ;!BANK0               10      6       6       4       37.5%
   237                           ;!BITBANK1            10      0       0       5        0.0%
   238                           ;!BANK1               10      0       0       6        0.0%
   239                           ;!ABS                  0      0       0       7        0.0%
   240                           ;!DATA                 0      0       0       8        0.0%
   241                           
   242                           	global	_main
   243                           
   244 ;; *************** function _main *****************
   245 ;; Defined at:
   246 ;;		line 10 in file "maincdemon.c"
   247 ;; Parameters:    Size  Location     Type
   248 ;;		None
   249 ;; Auto vars:     Size  Location     Type
   250 ;;		None
   251 ;; Return value:  Size  Location     Type
   252 ;;                  1   12[None  ] void 
   253 ;; Registers used:
   254 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+6, btemp+7, pclath, cstack
   255 ;; Tracked objects:
   256 ;;		On entry : B00/0
   257 ;;		On exit  : 0/0
   258 ;;		Unchanged: 0/0
   259 ;; Data sizes:     COMMON   BANK0   BANK1
   260 ;;      Params:         0       0       0
   261 ;;      Locals:         0       0       0
   262 ;;      Temps:          0       0       0
   263 ;;      Totals:         0       0       0
   264 ;;Total ram usage:        0 bytes
   265 ;; Hardware stack levels required when called:    1
   266 ;; This function calls:
   267 ;;		_retardon
   268 ;;		_retardon2
   269 ;; This function is called by:
   270 ;;		Startup code after reset
   271 ;; This function uses a non-reentrant model
   272 ;;
   273                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   274                           	file	"maincdemon.c"
   275                           	line	10
   276                           global __pmaintext
   277                           __pmaintext:	;psect for function _main
   278  0F1                     psect	maintext
   279                           	file	"maincdemon.c"
   280                           	line	10
   281                           	global	__size_of_main
   282                           	__size_of_main	equ	__end_of_main-_main
   283  0011                     	
   284                           _main:	
   285  0F1                     ;incstack = 0
   286                           	opt	stack 1
   287                           ; Regs used in _main: [wreg-fsr0h+status,2-btemp+0+btemp+6+btemp+7+pclath+cstack]
   288                           	line	11
   289                           	
   290                           l573:	
   291  0F1                     ;maincdemon.c: 11:     for(int i=0;i<200;i++){
   292                           	movlw	low(0FEh)
   293  0F1  CFE                	tris	0x6
   294  0F2  006                	goto	l575
   295  0F3  AF4                	line	12
   296                           ;maincdemon.c: 12:         for(int j=0;j<20;j++){
   297                           	
   298                           l13:	
   299  0F4                     	line	13
   300                           	
   301                           l575:	
   302  0F4                     ;maincdemon.c: 13:             __asm("nop");
   303                           	bcf	fsr,5	;FSR5=0, select bank0
   304  0F4  4A4                	bcf	(6),0	;volatile
   305  0F5  406                	line	14
   306                           	
   307                           l577:	
   308  0F6                     ;maincdemon.c: 14:         }
   309                           	fcall	entry__retardon2
   310  0F6  4A3  905  4A3      	line	15
   311                           	
   312                           l579:	
   313  0F9                     ;maincdemon.c: 15:     }
   314                           	bcf	fsr,5	;FSR5=0, select bank0
   315  0F9  4A4                	bsf	(6),0	;volatile
   316  0FA  506                	line	16
   317                           	
   318                           l581:	
   319  0FB                     ;maincdemon.c: 16: }
   320                           	fcall	entry__retardon
   321  0FB  4A3  907  4A3      	goto	l575
   322  0FE  AF4                	line	17
   323                           ;maincdemon.c: 17: 
   324                           	
   325                           l14:	
   326  0FF                     	goto	l575
   327  0FF  AF4                	
   328                           l15:	
   329  100                     	line	18
   330                           	
   331                           l16:	
   332  100                     	global	start
   333                           	ljmp	start
   334  100  4A3  A00           	opt stack 0
   335                           GLOBAL	__end_of_main
   336                           	__end_of_main:
   337  102                     	signat	_main,89
   338                           	global	_retardon2
   339                           
   340 ;; *************** function _retardon2 *****************
   341 ;; Defined at:
   342 ;;		line 28 in file "maincdemon.c"
   343 ;; Parameters:    Size  Location     Type
   344 ;;		None
   345 ;; Auto vars:     Size  Location     Type
   346 ;;  m               2    4[BANK0 ] int 
   347 ;;  l               2    2[BANK0 ] int 
   348 ;;  k               2    0[BANK0 ] int 
   349 ;; Return value:  Size  Location     Type
   350 ;;                  2    6[None  ] int 
   351 ;; Registers used:
   352 ;;		wreg, fsr0l, fsr0h, status,2, btemp+0, btemp+6, btemp+7
   353 ;; Tracked objects:
   354 ;;		On entry : 0/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMMON   BANK0   BANK1
   358 ;;      Params:         0       0       0
   359 ;;      Locals:         0       6       0
   360 ;;      Temps:          0       0       0
   361 ;;      Totals:         0       6       0
   362 ;;Total ram usage:        6 bytes
   363 ;; Hardware stack levels used:    1
   364 ;; This function calls:
   365 ;;		Nothing
   366 ;; This function is called by:
   367 ;;		_main
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
   371                           	line	28
   372                           global __ptext1
   373                           __ptext1:	;psect for function _retardon2
   374  168                     psect	text1
   375                           	file	"maincdemon.c"
   376                           	line	28
   377                           	global	__size_of_retardon2
   378                           	__size_of_retardon2	equ	__end_of_retardon2-_retardon2
   379  0098                     	
   380                           _retardon2:	
   381  168                     ;incstack = 0
   382                           	opt	stack 1
   383                           ; Regs used in _retardon2: [wreg-fsr0h+status,2+btemp+0+btemp+6+btemp+7]
   384                           psect	jmp_tab,class=ENTRY,delta=2
   385                           global __pjmp_tab
   386                           __pjmp_tab:
   387  005                     	global	entry__retardon2
   388                           entry__retardon2:
   389  005                     	ljmp	_retardon2
   390  005  4A3  B68           
   391                           psect	text1
   392                           	line	29
   393                           	
   394                           l523:	
   395  168                     	bcf	fsr,5	;FSR5=0, select bank0
   396  168  4A4                	clrf	(retardon2@k)
   397  169  070                	clrf	(retardon2@k+1)
   398  16A  071                	
   399                           l525:	
   400  16B                     	movf	(retardon2@k+1),w
   401  16B  211                	movwf	btemp+7
   402  16C  02F                	movf	(retardon2@k),w
   403  16D  210                	movwf	btemp+6
   404  16E  02E                	movf	1+wtemp3,w
   405  16F  20F                	xorlw	80h
   406  170  F80                	movwf	btemp+0
   407  171  028                	movlw	(0)^80h
   408  172  C80                	subwf	btemp+0,w
   409  173  088                	skipz
   410  174  743                	goto	u15
   411  175  B78                	movlw	0C8h
   412  176  CC8                	subwf	0+wtemp3,w
   413  177  08E                u15:
   414  178                     
   415                           	skipc
   416  178  703                	goto	u11
   417  179  B7B                	goto	u10
   418  17A  B7C                u11:
   419  17B                     	goto	l529
   420  17B  B7E                u10:
   421  17C                     	goto	l32
   422  17C  BFF                	
   423                           l527:	
   424  17D                     	goto	l32
   425  17D  BFF                	
   426                           l26:	
   427  17E                     	line	30
   428                           	
   429                           l529:	
   430  17E                     	bcf	fsr,5	;FSR5=0, select bank0
   431  17E  4A4                	clrf	(retardon2@l)
   432  17F  072                	clrf	(retardon2@l+1)
   433  180  073                	
   434                           l531:	
   435  181                     	movf	(retardon2@l+1),w
   436  181  213                	movwf	btemp+7
   437  182  02F                	movf	(retardon2@l),w
   438  183  212                	movwf	btemp+6
   439  184  02E                	movf	1+wtemp3,w
   440  185  20F                	xorlw	80h
   441  186  F80                	movwf	btemp+0
   442  187  028                	movlw	(0)^80h
   443  188  C80                	subwf	btemp+0,w
   444  189  088                	skipz
   445  18A  743                	goto	u25
   446  18B  B8E                	movlw	01Eh
   447  18C  C1E                	subwf	0+wtemp3,w
   448  18D  08E                u25:
   449  18E                     
   450                           	skipc
   451  18E  703                	goto	u21
   452  18F  B91                	goto	u20
   453  190  B92                u21:
   454  191                     	goto	l535
   455  191  B94                u20:
   456  192                     	goto	l549
   457  192  BE3                	
   458                           l533:	
   459  193                     	goto	l549
   460  193  BE3                	
   461                           l28:	
   462  194                     	line	31
   463                           	
   464                           l535:	
   465  194                     	bcf	fsr,5	;FSR5=0, select bank0
   466  194  4A4                	clrf	(retardon2@m)
   467  195  074                	clrf	(retardon2@m+1)
   468  196  075                	
   469                           l537:	
   470  197                     	movf	(retardon2@m+1),w
   471  197  215                	movwf	btemp+7
   472  198  02F                	movf	(retardon2@m),w
   473  199  214                	movwf	btemp+6
   474  19A  02E                	movf	1+wtemp3,w
   475  19B  20F                	xorlw	80h
   476  19C  F80                	movwf	btemp+0
   477  19D  028                	movlw	(0)^80h
   478  19E  C80                	subwf	btemp+0,w
   479  19F  088                	skipz
   480  1A0  743                	goto	u35
   481  1A1  BA4                	movlw	0Ah
   482  1A2  C0A                	subwf	0+wtemp3,w
   483  1A3  08E                u35:
   484  1A4                     
   485                           	skipc
   486  1A4  703                	goto	u31
   487  1A5  BA7                	goto	u30
   488  1A6  BA8                u31:
   489  1A7                     	goto	l30
   490  1A7  BAA                u30:
   491  1A8                     	goto	l545
   492  1A8  BC7                	
   493                           l539:	
   494  1A9                     	goto	l545
   495  1A9  BC7                	
   496                           l30:	
   497  1AA                     	line	32
   498                           # 32 "maincdemon.c"
   499                           nop ;# 
   500  1AA  000                psect	text1
   501                           	line	33
   502                           	
   503                           l541:	
   504  1AB                     	movlw	01h
   505  1AB  C01                	movwf	btemp+6
   506  1AC  02E                	clrf	btemp+7
   507  1AD  06F                	movf	0+wtemp3,w
   508  1AE  20E                	bcf	fsr,5	;FSR5=0, select bank0
   509  1AF  4A4                	addwf	(retardon2@m),f
   510  1B0  1F4                	skipnc
   511  1B1  603                	incf	(retardon2@m+1),f
   512  1B2  2B5                	movf	1+wtemp3,w
   513  1B3  20F                	addwf	(retardon2@m+1),f
   514  1B4  1F5                	
   515                           l543:	
   516  1B5                     	movf	(retardon2@m+1),w
   517  1B5  215                	movwf	btemp+7
   518  1B6  02F                	movf	(retardon2@m),w
   519  1B7  214                	movwf	btemp+6
   520  1B8  02E                	movf	1+wtemp3,w
   521  1B9  20F                	xorlw	80h
   522  1BA  F80                	movwf	btemp+0
   523  1BB  028                	movlw	(0)^80h
   524  1BC  C80                	subwf	btemp+0,w
   525  1BD  088                	skipz
   526  1BE  743                	goto	u45
   527  1BF  BC2                	movlw	0Ah
   528  1C0  C0A                	subwf	0+wtemp3,w
   529  1C1  08E                u45:
   530  1C2                     
   531                           	skipc
   532  1C2  703                	goto	u41
   533  1C3  BC5                	goto	u40
   534  1C4  BC6                u41:
   535  1C5                     	goto	l30
   536  1C5  BAA                u40:
   537  1C6                     	goto	l545
   538  1C6  BC7                	
   539                           l31:	
   540  1C7                     	line	34
   541                           	
   542                           l545:	
   543  1C7                     	movlw	01h
   544  1C7  C01                	movwf	btemp+6
   545  1C8  02E                	clrf	btemp+7
   546  1C9  06F                	movf	0+wtemp3,w
   547  1CA  20E                	bcf	fsr,5	;FSR5=0, select bank0
   548  1CB  4A4                	addwf	(retardon2@l),f
   549  1CC  1F2                	skipnc
   550  1CD  603                	incf	(retardon2@l+1),f
   551  1CE  2B3                	movf	1+wtemp3,w
   552  1CF  20F                	addwf	(retardon2@l+1),f
   553  1D0  1F3                	
   554                           l547:	
   555  1D1                     	movf	(retardon2@l+1),w
   556  1D1  213                	movwf	btemp+7
   557  1D2  02F                	movf	(retardon2@l),w
   558  1D3  212                	movwf	btemp+6
   559  1D4  02E                	movf	1+wtemp3,w
   560  1D5  20F                	xorlw	80h
   561  1D6  F80                	movwf	btemp+0
   562  1D7  028                	movlw	(0)^80h
   563  1D8  C80                	subwf	btemp+0,w
   564  1D9  088                	skipz
   565  1DA  743                	goto	u55
   566  1DB  BDE                	movlw	01Eh
   567  1DC  C1E                	subwf	0+wtemp3,w
   568  1DD  08E                u55:
   569  1DE                     
   570                           	skipc
   571  1DE  703                	goto	u51
   572  1DF  BE1                	goto	u50
   573  1E0  BE2                u51:
   574  1E1                     	goto	l535
   575  1E1  B94                u50:
   576  1E2                     	goto	l549
   577  1E2  BE3                	
   578                           l29:	
   579  1E3                     	line	35
   580                           	
   581                           l549:	
   582  1E3                     	movlw	01h
   583  1E3  C01                	movwf	btemp+6
   584  1E4  02E                	clrf	btemp+7
   585  1E5  06F                	movf	0+wtemp3,w
   586  1E6  20E                	bcf	fsr,5	;FSR5=0, select bank0
   587  1E7  4A4                	addwf	(retardon2@k),f
   588  1E8  1F0                	skipnc
   589  1E9  603                	incf	(retardon2@k+1),f
   590  1EA  2B1                	movf	1+wtemp3,w
   591  1EB  20F                	addwf	(retardon2@k+1),f
   592  1EC  1F1                	
   593                           l551:	
   594  1ED                     	movf	(retardon2@k+1),w
   595  1ED  211                	movwf	btemp+7
   596  1EE  02F                	movf	(retardon2@k),w
   597  1EF  210                	movwf	btemp+6
   598  1F0  02E                	movf	1+wtemp3,w
   599  1F1  20F                	xorlw	80h
   600  1F2  F80                	movwf	btemp+0
   601  1F3  028                	movlw	(0)^80h
   602  1F4  C80                	subwf	btemp+0,w
   603  1F5  088                	skipz
   604  1F6  743                	goto	u65
   605  1F7  BFA                	movlw	0C8h
   606  1F8  CC8                	subwf	0+wtemp3,w
   607  1F9  08E                u65:
   608  1FA                     
   609                           	skipc
   610  1FA  703                	goto	u61
   611  1FB  BFD                	goto	u60
   612  1FC  BFE                u61:
   613  1FD                     	goto	l529
   614  1FD  B7E                u60:
   615  1FE                     	goto	l32
   616  1FE  BFF                	
   617                           l27:	
   618  1FF                     	line	36
   619                           	
   620                           l32:	
   621  1FF                     	retlw 0
   622  1FF  800                	opt stack 0
   623                           GLOBAL	__end_of_retardon2
   624                           	__end_of_retardon2:
   625  200                     	signat	_retardon2,90
   626                           	global	_retardon
   627                           
   628 ;; *************** function _retardon *****************
   629 ;; Defined at:
   630 ;;		line 20 in file "maincdemon.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;  j               2    2[BANK0 ] int 
   635 ;;  i               2    0[BANK0 ] int 
   636 ;; Return value:  Size  Location     Type
   637 ;;                  2    8[None  ] int 
   638 ;; Registers used:
   639 ;;		wreg, fsr0l, fsr0h, status,2, btemp+0, btemp+6, btemp+7
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMMON   BANK0   BANK1
   645 ;;      Params:         0       0       0
   646 ;;      Locals:         0       4       0
   647 ;;      Temps:          0       0       0
   648 ;;      Totals:         0       4       0
   649 ;;Total ram usage:        4 bytes
   650 ;; Hardware stack levels used:    1
   651 ;; This function calls:
   652 ;;		Nothing
   653 ;; This function is called by:
   654 ;;		_main
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
   658                           	line	20
   659                           global __ptext2
   660                           __ptext2:	;psect for function _retardon
   661  102                     psect	text2
   662                           	file	"maincdemon.c"
   663                           	line	20
   664                           	global	__size_of_retardon
   665                           	__size_of_retardon	equ	__end_of_retardon-_retardon
   666  0066                     	
   667                           _retardon:	
   668  102                     ;incstack = 0
   669                           	opt	stack 1
   670                           ; Regs used in _retardon: [wreg-fsr0h+status,2+btemp+0+btemp+6+btemp+7]
   671                           psect	jmp_tab
   672                           	global	entry__retardon
   673                           entry__retardon:
   674  007                     	ljmp	_retardon
   675  007  4A3  B02           
   676                           psect	text2
   677                           	line	21
   678                           	
   679                           l553:	
   680  102                     ;maincdemon.c: 21:             for(int m=0;m<10;m++){
   681                           	bcf	fsr,5	;FSR5=0, select bank0
   682  102  4A4                	clrf	(retardon@i)
   683  103  070                	clrf	(retardon@i+1)
   684  104  071                	
   685                           l555:	
   686  105                     	movf	(retardon@i+1),w
   687  105  211                	movwf	btemp+7
   688  106  02F                	movf	(retardon@i),w
   689  107  210                	movwf	btemp+6
   690  108  02E                	movf	1+wtemp3,w
   691  109  20F                	xorlw	80h
   692  10A  F80                	movwf	btemp+0
   693  10B  028                	movlw	(0)^80h
   694  10C  C80                	subwf	btemp+0,w
   695  10D  088                	skipz
   696  10E  743                	goto	u75
   697  10F  B12                	movlw	0C8h
   698  110  CC8                	subwf	0+wtemp3,w
   699  111  08E                u75:
   700  112                     
   701                           	skipc
   702  112  703                	goto	u71
   703  113  B15                	goto	u70
   704  114  B16                u71:
   705  115                     	goto	l559
   706  115  B18                u70:
   707  116                     	goto	l23
   708  116  B67                	
   709                           l557:	
   710  117                     	goto	l23
   711  117  B67                	
   712                           l19:	
   713  118                     	line	22
   714                           	
   715                           l559:	
   716  118                     ;maincdemon.c: 22:                 __asm("nop");
   717                           	bcf	fsr,5	;FSR5=0, select bank0
   718  118  4A4                	clrf	(retardon@j)
   719  119  072                	clrf	(retardon@j+1)
   720  11A  073                	
   721                           l561:	
   722  11B                     	movf	(retardon@j+1),w
   723  11B  213                	movwf	btemp+7
   724  11C  02F                	movf	(retardon@j),w
   725  11D  212                	movwf	btemp+6
   726  11E  02E                	movf	1+wtemp3,w
   727  11F  20F                	xorlw	80h
   728  120  F80                	movwf	btemp+0
   729  121  028                	movlw	(0)^80h
   730  122  C80                	subwf	btemp+0,w
   731  123  088                	skipz
   732  124  743                	goto	u85
   733  125  B28                	movlw	014h
   734  126  C14                	subwf	0+wtemp3,w
   735  127  08E                u85:
   736  128                     
   737                           	skipc
   738  128  703                	goto	u81
   739  129  B2B                	goto	u80
   740  12A  B2C                u81:
   741  12B                     	goto	l21
   742  12B  B2E                u80:
   743  12C                     	goto	l569
   744  12C  B4B                	
   745                           l563:	
   746  12D                     	goto	l569
   747  12D  B4B                	
   748                           l21:	
   749  12E                     	line	23
   750                           # 23 "maincdemon.c"
   751                           nop ;# 
   752  12E  000                psect	text2
   753                           	line	24
   754                           	
   755                           l565:	
   756  12F                     ;maincdemon.c: 24:         }
   757                           	movlw	01h
   758  12F  C01                	movwf	btemp+6
   759  130  02E                	clrf	btemp+7
   760  131  06F                	movf	0+wtemp3,w
   761  132  20E                	bcf	fsr,5	;FSR5=0, select bank0
   762  133  4A4                	addwf	(retardon@j),f
   763  134  1F2                	skipnc
   764  135  603                	incf	(retardon@j+1),f
   765  136  2B3                	movf	1+wtemp3,w
   766  137  20F                	addwf	(retardon@j+1),f
   767  138  1F3                	
   768                           l567:	
   769  139                     	movf	(retardon@j+1),w
   770  139  213                	movwf	btemp+7
   771  13A  02F                	movf	(retardon@j),w
   772  13B  212                	movwf	btemp+6
   773  13C  02E                	movf	1+wtemp3,w
   774  13D  20F                	xorlw	80h
   775  13E  F80                	movwf	btemp+0
   776  13F  028                	movlw	(0)^80h
   777  140  C80                	subwf	btemp+0,w
   778  141  088                	skipz
   779  142  743                	goto	u95
   780  143  B46                	movlw	014h
   781  144  C14                	subwf	0+wtemp3,w
   782  145  08E                u95:
   783  146                     
   784                           	skipc
   785  146  703                	goto	u91
   786  147  B49                	goto	u90
   787  148  B4A                u91:
   788  149                     	goto	l21
   789  149  B2E                u90:
   790  14A                     	goto	l569
   791  14A  B4B                	
   792                           l22:	
   793  14B                     	line	25
   794                           	
   795                           l569:	
   796  14B                     ;maincdemon.c: 25:     }
   797                           	movlw	01h
   798  14B  C01                	movwf	btemp+6
   799  14C  02E                	clrf	btemp+7
   800  14D  06F                	movf	0+wtemp3,w
   801  14E  20E                	bcf	fsr,5	;FSR5=0, select bank0
   802  14F  4A4                	addwf	(retardon@i),f
   803  150  1F0                	skipnc
   804  151  603                	incf	(retardon@i+1),f
   805  152  2B1                	movf	1+wtemp3,w
   806  153  20F                	addwf	(retardon@i+1),f
   807  154  1F1                	
   808                           l571:	
   809  155                     	movf	(retardon@i+1),w
   810  155  211                	movwf	btemp+7
   811  156  02F                	movf	(retardon@i),w
   812  157  210                	movwf	btemp+6
   813  158  02E                	movf	1+wtemp3,w
   814  159  20F                	xorlw	80h
   815  15A  F80                	movwf	btemp+0
   816  15B  028                	movlw	(0)^80h
   817  15C  C80                	subwf	btemp+0,w
   818  15D  088                	skipz
   819  15E  743                	goto	u105
   820  15F  B62                	movlw	0C8h
   821  160  CC8                	subwf	0+wtemp3,w
   822  161  08E                u105:
   823  162                     
   824                           	skipc
   825  162  703                	goto	u101
   826  163  B65                	goto	u100
   827  164  B66                u101:
   828  165                     	goto	l559
   829  165  B18                u100:
   830  166                     	goto	l23
   831  166  B67                	
   832                           l20:	
   833  167                     	line	26
   834                           	
   835                           l23:	
   836  167                     	retlw 0
   837  167  800                	opt stack 0
   838                           GLOBAL	__end_of_retardon
   839                           	__end_of_retardon:
   840  168                     	signat	_retardon,90
   841                           global	___latbits
   842                           ___latbits	equ	1
   843  0001                     	global	btemp
   844                           	btemp set 08h
   845  0008                     
   846                           	DABS	1,8,8	;btemp
   847                           	global	wtemp0
   848                           	wtemp0 set btemp+0
   849  0008                     	global	wtemp1
   850                           	wtemp1 set btemp+2
   851  000A                     	global	wtemp2
   852                           	wtemp2 set btemp+4
   853  000C                     	global	wtemp3
   854                           	wtemp3 set btemp+6
   855  000E                     	global	ttemp0
   856                           	ttemp0 set btemp+0
   857  0008                     	global	ttemp1
   858                           	ttemp1 set btemp+3
   859  000B                     	global	ltemp0
   860                           	ltemp0 set btemp+0
   861  0008                     	global	ltemp1
   862                           	ltemp1 set btemp+4
   863  000C                     	global	ltemp3
   864                           	ltemp3 set btemp+2
   865  000A                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            1      0       0
    BANK0            16      6       6
    BANK1            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_retardon2

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     150
                           _retardon
                          _retardon2
 ---------------------------------------------------------------------------------
 (1) _retardon2                                            6     6      0      90
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _retardon                                             4     4      0      60
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _retardon
   _retardon2

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            1      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               1      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            10      0       0       3        0.0%
BANK0               10      6       6       4       37.5%
BITBANK1            10      0       0       5        0.0%
BANK1               10      0       0       6        0.0%
ABS                  0      0       0       7        0.0%
DATA                 0      0       0       8        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Sep 24 00:15:30 2018

            __CFG_CP$OFF 0000                       l20 0167                       l21 012E  
                     l13 00F4                       l22 014B                       l30 01AA  
                     l14 00FF                       l23 0167                       l31 01C7  
                     l15 0100                       l32 01FF                       l16 0100  
                     l26 017E                       l19 0118                       l27 01FF  
                     l28 0194                       l29 01E3                       u10 017C  
                     u11 017B                       u20 0192                       u21 0191  
                     u30 01A8                       u31 01A7                       u15 0178  
                     u40 01C6                       u41 01C5                       u25 018E  
                     u50 01E2                       u51 01E1                       u35 01A4  
                     u60 01FE                       u61 01FD                       u45 01C2  
                     u70 0116                       u71 0115                       u55 01DE  
                     u80 012C                       u81 012B                       u65 01FA  
                     u90 014A                       u91 0149                       u75 0112  
                     u85 0128                       u95 0146                       fsr 0004  
                    l531 0181                      l523 0168                      l541 01AB  
                    l533 0193                      l525 016B                      l551 01ED  
                    l543 01B5                      l535 0194                      l527 017D  
                    l561 011B                      l553 0102                      l545 01C7  
                    l537 0197                      l529 017E                      l571 0155  
                    l563 012D                      l555 0105                      l547 01D1  
                    l539 01A9                      l565 012F                      l557 0117  
                    l549 01E3                      l581 00FB                      l573 00F1  
                    l567 0139                      l559 0118                      l575 00F4  
                    l569 014B                      l577 00F6                      l579 00F9  
                    u100 0166                      u101 0165                      u105 0162  
           __CFG_WDT$OFF 0000                     _main 00F1                     btemp 0008  
                   start 0000                    ?_main 0000                    ltemp0 0008  
                  ltemp1 000C                    ltemp3 000A                    ttemp0 0008  
                  ttemp1 000B                    wtemp0 0008                    wtemp1 000A  
                  wtemp2 000C                    wtemp3 000E           __CFG_MCLRE$OFF 0000  
        __initialization 0002             __end_of_main 0102                   ??_main 0000  
         __CFG_OSC$IntRC 0000         __end_of_retardon 0168  __end_of__initialization 0002  
         __pcstackCOMMON 0000               __pmaintext 00F1       __size_of_retardon2 0098  
        entry__retardon2 0005                ?_retardon 0000                  __ptext1 0168  
                __ptext2 0102     end_of_initialization 0002        __end_of_retardon2 0200  
             ??_retardon 0000      start_initialization 0002                ___latbits 0001  
          __pcstackBANK0 0010                __pjmp_tab 0005        __size_of_retardon 0066  
         entry__retardon 0007               retardon2@k 0010               retardon2@l 0012  
             retardon2@m 0014                 _GPIObits 0006                _retardon2 0168  
               _TRISGPIO 0006               ?_retardon2 0000            __size_of_main 0011  
              retardon@i 0010                retardon@j 0012                 _retardon 0102  
            ??_retardon2 0000  
